// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OA.REPO;

#nullable disable

namespace OA.REPO.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240521095510_addData")]
    partial class addData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OA.DATA.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OA.DATA.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedDate = new DateTime(2024, 5, 21, 15, 55, 9, 236, DateTimeKind.Local).AddTicks(9539),
                            Address = "Dinajpur",
                            FirstName = "Atikul ",
                            IPAddress = "192.168.3.3",
                            LastName = "Islam",
                            ModifiedDate = new DateTime(2024, 5, 21, 15, 55, 9, 236, DateTimeKind.Local).AddTicks(9555)
                        },
                        new
                        {
                            Id = 2,
                            AddedDate = new DateTime(2024, 5, 21, 15, 55, 9, 236, DateTimeKind.Local).AddTicks(9558),
                            Address = "Khanasam",
                            FirstName = "Ismail ",
                            IPAddress = "192.168.3.4",
                            LastName = "Haque",
                            ModifiedDate = new DateTime(2024, 5, 21, 15, 55, 9, 236, DateTimeKind.Local).AddTicks(9558)
                        },
                        new
                        {
                            Id = 3,
                            AddedDate = new DateTime(2024, 5, 21, 15, 55, 9, 236, DateTimeKind.Local).AddTicks(9609),
                            Address = "Gazipur",
                            FirstName = "Mominul ",
                            IPAddress = "192.168.3.5",
                            LastName = "Islam",
                            ModifiedDate = new DateTime(2024, 5, 21, 15, 55, 9, 236, DateTimeKind.Local).AddTicks(9609)
                        },
                        new
                        {
                            Id = 4,
                            AddedDate = new DateTime(2024, 5, 21, 15, 55, 9, 236, DateTimeKind.Local).AddTicks(9611),
                            Address = " Dhaka",
                            FirstName = "Alamin",
                            IPAddress = "192.168.3.7",
                            LastName = " Haque",
                            ModifiedDate = new DateTime(2024, 5, 21, 15, 55, 9, 236, DateTimeKind.Local).AddTicks(9611)
                        });
                });

            modelBuilder.Entity("OA.DATA.UserProfile", b =>
                {
                    b.HasOne("OA.DATA.User", "User")
                        .WithMany("UserProfile")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OA.DATA.User", b =>
                {
                    b.Navigation("UserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
